<?php

namespace RecrutementTest\RecrutementTestBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends EntityRepository
{
    
    public function getQuestionByTestId($oTest) {
        
//        $qb = $this->createQueryBuilder('q')
//                ->where('q.test = :test')
//                ->setParameter('test', $oTest);
        
        $qb = $this->createQueryBuilder('q');
        
        
        return $oResult = $qb->getQuery()->getResult();
    }
    
    /**
     * Converti un array de donnÃ©es de questions en array d'objets question.
     * 
     */
    public function convertQuestions($aQuestionsData) {
        
        foreach ($aQuestionsData as $key => $aQuestions) {
            $oQuestion = new Question();
            $oQuestion->setLibelle($aQuestions['intitule']);
            // Bind les rÃ©ponses avec la question courante.
            $aReponses = $this->getEntityManager()->getRepository("RecrutementTestBundle:Reponse")
                    ->convertFromArrayToReponsesCollection($aQuestionsData);
            $oQuestion->setReponses($aReponses);
            
            $aQuestionCollection[] = $oQuestion;
        }
        return $aQuestionCollection;
    }
    
    
    /**
     * Vide complement le contenu d'un test.
     * 
     * @param Test $oTest
     * @return boolean
     */
    public function truncateTest($oTest) {
        
        $oEm = $this->getEntityManager();
        $oReponseRepository = $oEm->getRepository("RecrutementTestBundle:Reponse");
        $aQuestion = $this->findByTest($oTest);
        
        if (null != $aQuestion) {
            foreach ($aQuestion as $oQuestion) {
                
                $oReponseRepository->truncateQuestion($oQuestion);
                $oEm->remove($oQuestion);
                $oEm->flush();
            }
            $bReturn = true;
        }
        else {
            $bReturn = false;
        }
        
        return $bReturn;
    }
}
